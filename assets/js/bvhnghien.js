document.addEventListener("DOMContentLoaded", function() {
    const token = localStorage.getItem("token");
    const role = localStorage.getItem("role");

    if (!token || role !== "ROLE_QUANTRIVIEN") {
        alert("B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p trang n√†y!");
        window.location.href = "/login.html";
        return;
    }

    // document.getElementById("avatar").addEventListener("change", handleFileChange);
});

// ƒêƒÉng xu·∫•t
document.getElementById("logoutBtn").addEventListener("click", function() {
    localStorage.clear(); // X√≥a token v√† th√¥ng tin ng∆∞·ªùi d√πng
    window.location.href = "/login.html";
});



document.addEventListener("DOMContentLoaded", function() {
    const token = localStorage.getItem("token");
    const role = localStorage.getItem("role");

    if (!token || role !== "ROLE_QUANTRIVIEN") {
        alert("B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p trang n√†y!");
        window.location.href = "/login.html";
        return;
    }

    // Kh·ªüi t·∫°o QuillJS
    const quill = new Quill("#editor", {
        theme: "snow",
        placeholder: "Nh·∫≠p n·ªôi dung b√†i vi·∫øt...",
        modules: {
            toolbar: [
                [{ header: [1, 2, 3, false] }],
                ["bold", "italic", "underline"],
                [{ list: "ordered" }, { list: "bullet" }],
                ["link", "image"],
            ],
        },
    });

    // B·∫Øt s·ª± ki·ªán submit form th√™m b√†i vi·∫øt
    document.getElementById("addBaiVietForm").addEventListener("submit", function(event) {
        event.preventDefault();
        addBaiViet();
    });

    // B·∫Øt s·ª± ki·ªán ƒëƒÉng xu·∫•t
    document.getElementById("logoutBtn").addEventListener("click", function() {
        localStorage.clear();
        window.location.href = "/login.html";
    });
});

// üü¢ Th√™m b√†i vi·∫øt m·ªõi
async function addBaiViet() {
    const tieuDe = document.getElementById("tieuDe").value;
    const noiDung = document.querySelector(".ql-editor").innerHTML;
    const ngayDang = new Date().toISOString(); // L·∫•y ng√†y hi·ªán t·∫°i
    const idQuanTri = localStorage.getItem("userId"); // ID ng∆∞·ªùi ƒëƒÉng nh·∫≠p
    const token = localStorage.getItem("token");

    if (!tieuDe || !noiDung || !idQuanTri) {
        alert("Vui l√≤ng nh·∫≠p ti√™u ƒë·ªÅ, n·ªôi dung v√† ƒë·∫£m b·∫£o ƒë√£ ƒëƒÉng nh·∫≠p!");
        return;
    }

    const baiViet = {
        tieuDe,
        noiDung,
        ngayDang,
        tacGia: { idQuanTri } // ‚úÖ ƒê√∫ng ƒë·ªãnh d·∫°ng 
    };

    try {
        const response = await fetch("http://localhost:8080/api/QuanTriVien/BaiViet", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify(baiViet),
        });

        if (response.ok) {
            alert("Th√™m b√†i vi·∫øt th√†nh c√¥ng!");
            location.reload();
        } else {
            alert("L·ªói khi th√™m b√†i vi·∫øt! H√£y ki·ªÉm tra l·∫°i.");
        }
    } catch (error) {
        console.error("L·ªói:", error);
        alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
    }
}




// üü† C·∫≠p nh·∫≠t b√†i vi·∫øt
async function updateBaiViet(id) {
    const tieuDe = document.getElementById("tieuDe").value;
    const noiDung = quill.root.innerHTML; // L·∫•y n·ªôi dung t·ª´ QuillJS

    const token = localStorage.getItem("token");

    if (!tieuDe || !noiDung) {
        alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ti√™u ƒë·ªÅ v√† n·ªôi dung!");
        return;
    }

    const baiViet = {
        tieuDe: tieuDe,
        noiDung: noiDung,
    };

    try {
        const response = await fetch(`http://localhost:8080/api/QuanTriVien/BaiViet/${id}`, {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify(baiViet),
        });

        if (response.ok) {
            alert("C·∫≠p nh·∫≠t b√†i vi·∫øt th√†nh c√¥ng!");
            location.reload();
        } else {
            alert("L·ªói khi c·∫≠p nh·∫≠t b√†i vi·∫øt!");
        }
    } catch (error) {
        console.error("L·ªói:", error);
        alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
    }
}
async function deleteBaiViet(id) {
    const token = localStorage.getItem("token");

    if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y kh√¥ng?")) {
        return;
    }

    try {
        const response = await fetch(`http://localhost:8080/api/QuanTriVien/BaiViet/${id}`, {
            method: "DELETE",
            headers: {
                Authorization: `Bearer ${token}`,
            },
        });

        if (response.ok) {
            alert("X√≥a b√†i vi·∫øt th√†nh c√¥ng!");
            location.reload();
        } else {
            alert("L·ªói khi x√≥a b√†i vi·∫øt!");
        }
    } catch (error) {
        console.error("L·ªói:", error);
        alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
    }
}

async function fetchBaiViet() {
    const token = localStorage.getItem("token");

    if (!token) {
        console.error("Kh√¥ng c√≥ token x√°c th·ª±c!");
        return;
    }

    try {
        const response = await fetch("http://localhost:8080/api/QuanTriVien/BaiViet", {
            method: "GET",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
        });

        if (!response.ok) {
            throw new Error(`L·ªói ${response.status}: Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu b√†i vi·∫øt!`);
        }

        let baiViets;
        try {
            baiViets = await response.json();
        } catch (jsonError) {
            throw new Error("D·ªØ li·ªáu ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá!");
        }

        console.log("Danh s√°ch b√†i vi·∫øt:", baiViets);

        const tableBody = document.getElementById("baiVietTableBody");
        if (!tableBody) {
            console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ b·∫£ng!");
            return;
        }

        tableBody.innerHTML = ""; // X√≥a b·∫£ng tr∆∞·ªõc khi c·∫≠p nh·∫≠t

        baiViets.forEach((baiViet) => {
            const row = document.createElement("tr");

            row.innerHTML = `
                <td>${baiViet.idBaiViet ?? "N/A"}</td>
                <td>${baiViet.tieuDe ?? "Kh√¥ng c√≥ ti√™u ƒë·ªÅ"}</td>
                <td>${getFirstWords(baiViet.noiDung)}</td>
                <td>${baiViet.tacGia?.hoTen ?? "Kh√¥ng c√≥ t√°c gi·∫£"}</td>
                <td>${baiViet.ngayDang ? new Date(baiViet.ngayDang).toLocaleDateString("vi-VN") : "Kh√¥ng c√≥ ng√†y ƒëƒÉng"}</td>
                <td>
                    <button class="btn btn-primary btn-sm" onclick="viewBaiViet(${baiViet.idBaiViet})">Xem</button>
                    <button class="btn btn-warning btn-sm" onclick="updateBaiViet(${baiViet.idBaiViet})">S·ª≠a</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteBaiViet(${baiViet.idBaiViet})">X√≥a</button>
                </td>
            `;

            tableBody.appendChild(row);
        });
    } catch (error) {
        console.error("L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt:", error.message);
    }
}

function getFirstWords(htmlContent, wordCount = 20) {
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = htmlContent;
    const text = tempDiv.textContent || tempDiv.innerText || "";
    return text.split(/\s+/).slice(0, wordCount).join(" ") + "...";
}

// G·ªçi l·∫°i h√†m khi trang t·∫£i
document.addEventListener("DOMContentLoaded", fetchBaiViet);